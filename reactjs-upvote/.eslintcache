[{"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\App.js":"1","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\index.js":"2","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\routes\\LoginRoutes.js":"3","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\routes\\MainRoutes.js":"4","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\view\\register\\Register.js":"5","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\reportWebVitals.js":"6","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\view\\home\\Home.js":"7","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\api\\auth-api.js":"8","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\routes\\index.js":"9","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\components\\header\\Header.js":"10","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\view\\login\\Login.js":"11","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\components\\card\\Card.js":"12","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\api\\post-api.js":"13","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\components\\textEditor\\TextEditor.js":"14","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\context\\auth.js":"15","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\context\\post.js":"16"},{"size":356,"mtime":1611853244550,"results":"17","hashOfConfig":"18"},{"size":579,"mtime":1611847387065,"results":"19","hashOfConfig":"18"},{"size":505,"mtime":1611847247464,"results":"20","hashOfConfig":"18"},{"size":404,"mtime":1611847247467,"results":"21","hashOfConfig":"18"},{"size":3514,"mtime":1611847384367,"results":"22","hashOfConfig":"18"},{"size":362,"mtime":1611845422368,"results":"23","hashOfConfig":"18"},{"size":1562,"mtime":1611852809458,"results":"24","hashOfConfig":"18"},{"size":1491,"mtime":1611847787799,"results":"25","hashOfConfig":"18"},{"size":328,"mtime":1611847247475,"results":"26","hashOfConfig":"18"},{"size":888,"mtime":1611861112736,"results":"27","hashOfConfig":"18"},{"size":3503,"mtime":1611847396675,"results":"28","hashOfConfig":"18"},{"size":2646,"mtime":1611860974431,"results":"29","hashOfConfig":"18"},{"size":2897,"mtime":1611854508848,"results":"30","hashOfConfig":"18"},{"size":4513,"mtime":1611861060673,"results":"31","hashOfConfig":"18"},{"size":2335,"mtime":1611847220264,"results":"32","hashOfConfig":"18"},{"size":1553,"mtime":1611853988746,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5rlz5c",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\App.js",[],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\index.js",[],["75","76"],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\routes\\LoginRoutes.js",[],["77","78"],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\routes\\MainRoutes.js",[],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\view\\register\\Register.js",["79","80","81"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  Container,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport AuthContext from \"../../context/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { user, registerUser } = useContext(AuthContext);\r\n  const [customSnackbar, setCustomSnackbar] = useState({\r\n    open: false,\r\n    message: \"\",\r\n    type: \"error\",\r\n  });\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  async function onSubmit(data) {\r\n    console.log(data);\r\n    let response = await registerUser(data);\r\n    if (response.error) {\r\n\r\n      setCustomSnackbar({\r\n        open: true,\r\n        message: response.error,\r\n        type: \"error\",\r\n      });\r\n      return;\r\n    }\r\n    setCustomSnackbar({\r\n      open: true,\r\n      message: \"Vamos Lá!\",\r\n      type: \"success\",\r\n    });\r\n  }\r\n  const Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setCustomSnackbar({\r\n      open: false,\r\n      message: \"\",\r\n      type: \"success\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n        Cadastrar-se\r\n        </Typography>\r\n\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            inputRef={register({ required: true })}\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoFocus\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Senha\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Registrar\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid>\r\n              <Link href=\"\" onClick={()=>history.push('/')}>\r\n                {\"Já tenho conta!\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Snackbar\r\n          open={customSnackbar.open}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity={customSnackbar.type}>\r\n            {customSnackbar.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n",["82","83"],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\reportWebVitals.js",[],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\view\\home\\Home.js",["84","85"],"import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport { Button, makeStyles, Container } from \"@material-ui/core\";\r\nimport TextEditor from \"../../components/textEditor/TextEditor.js\";\r\nimport Card from \"../../components/card/Card.js\";\r\nimport PostContext from \"../../context/post\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const { posts, getPosts } = useContext(PostContext);\r\n  const [openPost, setOpenPost] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\">\r\n      {openPost ? (\r\n        <TextEditor openPost={openPost} setOpenPost={setOpenPost} />\r\n      ) : null}\r\n      <Container\r\n        component=\"content\"\r\n        style={{ justifyContent: \"center\", marginTop: 15 }}\r\n        maxWidth=\"xs\"\r\n      >\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setOpenPost(true)}\r\n        >\r\n          Postar\r\n        </Button>\r\n        {posts\r\n          ? posts.map((item, key) => {\r\n              return <Card key={key} dados={item} />;\r\n            })\r\n          : null}\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\api\\auth-api.js",["86","87"],"import axios from \"axios\";\r\n\r\nexport const loginUser = async ( user ) => {\r\n  try {\r\n    let result = await axios.post(\"auth\", user);\r\n    return result.data;\r\n  } catch (error) {\r\n    switch (error.response == undefined ? 65465 : error.response.status) {\r\n      case 401: //UNAUTHORIZED user not found or wrong password\r\n      case 406: //NOT_ACCEPTABLE empty (username or password)\r\n        return {\r\n          error: \"Formato de username ou senha inválido.\"\r\n        };\r\n      case 500:\r\n        return {\r\n          error: \"Problemas com o servidor.\"\r\n        };\r\n      default:\r\n        return {\r\n          error: \"Verifique sua conexão com a internet.\"\r\n        };\r\n    }\r\n  }\r\n};\r\n\r\nexport const register = async (user) => {\r\n  try {\r\n    let result = await axios.post(\"users\", user);\r\n    console.log(\"[auth-api register result]\",result.data)\r\n    return result.data;\r\n  } catch (error) {\r\n    console.log(\"[auth-api error register]\", error)\r\n    switch (error.response == undefined ? 65465 : error.response.status) {\r\n      case 406: //NOT_ACCEPTABLE empty (username or password)\r\n        return {\r\n          error: \"Formato de username ou senha inválido.\"\r\n        };\r\n      case 409: //CONFLICT\r\n        return {\r\n          error: \"Username ja existe.\"\r\n        };\r\n      case 500:\r\n        return {\r\n          error: \"Problemas com o servidor.\"\r\n        };\r\n      default:\r\n        return {\r\n          error: \"Verifique sua conexão com a internet.\"\r\n        };\r\n    }\r\n  }\r\n};","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\routes\\index.js",[],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\components\\header\\Header.js",[],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\view\\login\\Login.js",["88","89","90"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  Container,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport AuthContext from \"../../context/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { user, logInUser } = useContext(AuthContext);\r\n  const [customSnackbar, setCustomSnackbar] = useState({\r\n    open: false,\r\n    message: \"\",\r\n    type: \"error\",\r\n  });\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  async function onSubmit(data) {\r\n    console.log(data);\r\n    let response = await logInUser(data);\r\n    if (response.error) {\r\n      setCustomSnackbar({\r\n        open: true,\r\n        message: response.error,\r\n        type: \"error\",\r\n      });\r\n      return\r\n    }\r\n    setCustomSnackbar({\r\n      open: true,\r\n      message: \"Vamos Lá!\",\r\n      type: \"success\",\r\n    });\r\n  }\r\n  const Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setCustomSnackbar({\r\n      open: false,\r\n      message: \"\",\r\n      type: \"success\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            inputRef={register({ required: true })}\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoFocus\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Senha\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Logar\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid>\r\n              <Link href=\"\" onClick={()=>history.push('/Register')}>\r\n                {\"Não tem conta?\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Snackbar\r\n          open={customSnackbar.open}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity={customSnackbar.type}>\r\n            {customSnackbar.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\components\\card\\Card.js",[],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\api\\post-api.js",[],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\components\\textEditor\\TextEditor.js",[],"C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\context\\auth.js",["91"],"import React, {createContext, useState, useEffect, useContext} from 'react';\r\nimport * as auth from '../api/auth-api';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({children}) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loadingDataAuth, setLoadingDataAuth] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function loadStorageData() {\r\n      // storeDataUser({id:122342,username:\"DanielDLJ\"})\r\n      const storageUser = await getData();\r\n      if (storageUser) {\r\n        setUser(storageUser);\r\n      }\r\n      setLoadingDataAuth(false);\r\n    }\r\n    loadStorageData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('User logado', user);\r\n  }, [user]);\r\n\r\n\r\n\r\n  async function logInUser(user) {\r\n    let response = await auth.loginUser(user);\r\n    // response = {username:\"teste\",id: 23423}\r\n    if (response.error) {\r\n      return response;\r\n    }\r\n    setUser(response);\r\n    storeDataUser(response);\r\n\r\n    return response;\r\n  }\r\n  \r\n\r\n  async function registerUser(userToregister) {\r\n    const response = await auth.register(userToregister);\r\n    if (response.error) {\r\n      return response;\r\n    }\r\n    setUser(response);\r\n    storeDataUser(response);\r\n\r\n    return response;\r\n  }\r\n\r\n  function signOut() {\r\n    try {\r\n        localStorage.clear();\r\n        setUser(null);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    \r\n  }\r\n\r\n  async function getData() {\r\n    try {\r\n      const id = localStorage.getItem('user_id');\r\n      const username = localStorage.getItem('user_username');\r\n      if (id == null) return null;\r\n\r\n      let user = {\r\n        id: parseInt(id),\r\n        username: username\r\n      };\r\n      return user;\r\n    } catch (e) {\r\n      console.log('[AuthProvider getData]', e);\r\n    }\r\n  }\r\n\r\n  async function storeDataUser(user) {\r\n    try {\r\n        localStorage.setItem('user_id', user.id.toString());\r\n        localStorage.setItem('user_username', user.username);\r\n    } catch (e) {\r\n      console.log('AuthContext storeDataUser', e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        signed: !!user,\r\n        loadingDataAuth,\r\n        user,\r\n        logInUser,\r\n        registerUser,\r\n        signOut,\r\n        getData,\r\n      }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;","C:\\Users\\Juninho\\Desktop\\GitHub\\SpringBoot-ReactJs-Upvote\\reactjs-upvote\\src\\context\\post.js",["92","93"],"import React, {createContext, useState, useEffect, useContext} from 'react';\r\nimport * as post from '../api/post-api';\r\nimport AuthContext from \"../context/auth\";\r\n\r\nconst PostContext = createContext({});\r\n\r\nexport const PostProvider = ({children}) => {\r\n  const { loadingDataAuth, user } = useContext(AuthContext);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    if(!loadingDataAuth && user != null){\r\n      getPosts(user);\r\n    }\r\n  },[])\r\n\r\n  async function getPosts() {\r\n    let response = await post.getPosts(user);\r\n    if (response.error) {\r\n      return response;\r\n    }else{\r\n      setPosts([])\r\n      setPosts(response)\r\n      return true\r\n    }\r\n  }\r\n\r\n  async function createPost(content) {\r\n    let response = await post.createPost(user, content);\r\n    if (response.error) {\r\n      return response;\r\n    }else{\r\n      setPosts(response)\r\n      return true\r\n    }\r\n  }\r\n\r\n  async function likePost(postId) {\r\n    let response = await post.likePost(user, postId);\r\n    return response\r\n    if (response.error) {\r\n\r\n      return false;\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  async function disLikePost(postId) {\r\n    let response = await post.disLikePost(user, postId);\r\n    if (response.error) {\r\n      return false;\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PostContext.Provider\r\n      value={{\r\n        posts,\r\n        getPosts,\r\n        createPost,\r\n        likePost,\r\n        disLikePost,\r\n      }}>\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PostContext;",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"104","line":15,"column":19,"nodeType":"102","messageId":"103","endLine":15,"endColumn":29},{"ruleId":"100","severity":1,"message":"105","line":37,"column":11,"nodeType":"102","messageId":"103","endLine":37,"endColumn":15},{"ruleId":"94","replacedBy":"106"},{"ruleId":"96","replacedBy":"107"},{"ruleId":"100","severity":1,"message":"108","line":25,"column":9,"nodeType":"102","messageId":"103","endLine":25,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":31,"column":6,"nodeType":"111","endLine":31,"endColumn":8,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":8,"column":28,"nodeType":"115","messageId":"116","endLine":8,"endColumn":30},{"ruleId":"113","severity":1,"message":"114","line":33,"column":28,"nodeType":"115","messageId":"116","endLine":33,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"104","line":15,"column":19,"nodeType":"102","messageId":"103","endLine":15,"endColumn":29},{"ruleId":"100","severity":1,"message":"105","line":37,"column":11,"nodeType":"102","messageId":"103","endLine":37,"endColumn":15},{"ruleId":"100","severity":1,"message":"117","line":1,"column":52,"nodeType":"102","messageId":"103","endLine":1,"endColumn":62},{"ruleId":"109","severity":1,"message":"118","line":15,"column":5,"nodeType":"111","endLine":15,"endColumn":7,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":41,"column":5,"nodeType":"122","messageId":"123","endLine":46,"endColumn":6},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Controller' is defined but never used.","'user' is assigned a value but never used.",["124"],["125"],"'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["126"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'getPosts', 'loadingDataAuth', and 'user'. Either include them or remove the dependency array.",["127"],"no-unreachable","Unreachable code.","IfStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [getPosts]",{"range":"132","text":"133"},"Update the dependencies array to be: [getPosts, loadingDataAuth, user]",{"range":"134","text":"135"},[853,855],"[getPosts]",[458,460],"[getPosts, loadingDataAuth, user]"]